#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\KOMAoption{fontsize}{12pt}\recalctypearea
\usepackage[libertine]{newtxmath}
\usepackage{fontspec}

%\usepackage[osf,p,type1]{libertine}
\defaultfontfeatures{Ligatures={Common,TeX},Numbers={Proportional}, Contextuals = Swash, Fractions=Off}% ,Scale=MatchLowercase} bug in current Biolinum
\setmainfont{Linux Libertine O}
\setsansfont{Linux Biolinum O}
\setmonofont[Numbers={Monospaced, Lining, SlashedZero}]{Linux Libertine Mono O}
\usepackage[libertine]{newtxmath}

%\setromanfont [Ligatures={Common,TeX}, Numbers={OldStyle}]{Linux Libertine O}
%\setsansfont [Ligatures={Common}, BoldFont={Fontin Sans Bold}, ItalicFont={Fontin Sans Italic}]{Fontin Sans}
%\setsansfont[Ligatures={Common,TeX}, Numbers={OldStyle}]{Linux Biolinum O}
%\setromanfont [Ligatures={Common,TeX}, Numbers={OldStyle}]{Libertine}
%\setsansfont [Ligatures={Common}, BoldFont={Fontin Sans Bold}, ItalicFont={Fontin Sans Italic}]{Fontin Sans}
%\setsansfont[Ligatures={Common,TeX}, Numbers={OldStyle}]{Linux Biolinum O}

\usepackage[letterspace = 0, babel = true, protrusion = true, expansion = true]{microtype}
%\usepackage{textcomp}
%\usepackage{amsmath}
%\usepackage{amssymb}
\usepackage{lipsum}
\usepackage{lettrine}
\usepackage{minted}
\usepackage{tcolorbox}
\usepackage{etoolbox}
% Wrap minted environment in a pretty box.
\BeforeBeginEnvironment{minted}{\begin{tcolorbox}}%
\AfterEndEnvironment{minted}{\end{tcolorbox}}%

%\usepackage{enumitem}
%\setlist{nosep}
%\setlist{noitemsep} % to leave space around whole list
% More control per list
%\setlist[2]{noitemsep} % sets the itemsep and parsep for all level two lists to 0
%\setenumerate{noitemsep} % sets no itemsep for enumerate lists only
%\begin{enumerate}[noitemsep] % sets no itemsep for just this list
% ITEMS
%\end{enumerate}

\usepackage{mathdots}
\usepackage{url}

\usepackage{varioref}
\usepackage{hyperref}
\usepackage{cleveref}

\everymath{\displaystyle}

% Vertically stretch a table row this amount
%\renewcommand*\arraystretch{1.5}
% Or use this command
% \setlength{\extrarowheight}{2pt}


% Make nicer looking captions
%\usepackage{caption}
%\captionsetup{labelfont=bf,format=hang,justification=justified}

% Indent KOMA script captions
%\setcapindent{1em}

% Make KOMA script caption labels (eg Figure 1:) bold.
\addtokomafont{captionlabel}{\bfseries}

% Adjust the KOMA caption fonts smaller
%\setkomafont{caption}{\itshape}
%\setkomafont{caption}{\small}
%\setkomafont{captionlabel}{\bfseries}
\usepackage{subfig}
\captionsetup[subfloat]{font={it}}
%\captionsetup[subfloat]{font={small}}


% Note that tables should have the caption above the table.
% Figures should have the caption below the table.
% Algorithms does not seem to matter above or below, though code above the caption looks nicer in LyX GUI
% Could adjust the caption spacing depending on the environment (document class)
%\captionsetup[table]{skip=20pt}
%\setlength{\abovecaptionskip}{15pt plus 10pt minus 2pt} % Chosen fairly arbitrarily

% Center figures and tables
\let\originaltable\table
\let\endoriginaltable\endtable
\renewenvironment{table}[1][ht]{%
\originaltable[#1]
\addfontfeatures{Numbers={Lining, Monospaced, }}%SlashedZero}}
 \centering}%
{\endoriginaltable}

\let\originalfigure\figure
\let\endoriginalfigure\endfigure
\renewenvironment{figure}[1][ht]{%
\originalfigure[#1]
\centering}%
{\endoriginalfigure}

%\renewcommand*{\figureformat}{}
%\renewcommand*{\tableformat}{\tablename~\thetable}
%\renewcommand*{\captionformat}{}
\renewcommand*\thetable{%
%  \thechapter.%
  \@arabic\c@table
}

\renewcommand*\thefigure{%
%  \thechapter.%
  \@arabic\c@figure
}


% Force floats to appear in their respective sections, subsections, and subsubsections.
%\usepackage[section,subsection,subsubsection]{extraplaceins}
%\usepackage[section,subsection]{extraplaceins}

%\makeatletter
\if@twoside % commands below work only for twoside option of \documentclass
    \newlength{\textblockoffset}
    \setlength{\textblockoffset}{12mm}
    \addtolength{\hoffset}{\textblockoffset}
    \addtolength{\evensidemargin}{-2.0\textblockoffset}
\fi
%\makeatother


\definecolor{green}{RGB}{0, 180, 0}
%\definecolor{cyan}{RGB}{0, 180, 180}
\definecolor{blue}{RGB}{0,130,255}
\definecolor{yellow}{RGB}{200,200,0}
\definecolor{Black}{RGB}{0, 0, 0}
\definecolor{Gray}{RGB}{150, 150, 150}
\definecolor{teal}{RGB}{64, 128, 128}
\definecolor{gray}{rgb}{0.95,0.95,0.95}
\definecolor{muave}{rgb}{0.58,0,0.82}

\usepackage{framed}

\usepackage{xcolor}% http://ctan.org/pkg/xcolor
\newcommand{\myquote}[2][black!10]{%
  \medskip
  {\setlength{\fboxsep}{.1\columnwidth}%
  \noindent\colorbox{#1}{\begin{minipage}{\dimexpr\columnwidth-2\fboxsep}
    \raggedright\sffamily\bfseries\Huge#2
  \end{minipage}}} \par
  \medskip
}
%\newcommand{\hltt}[1]{\textcolor{blue}{#1}}
\usepackage{footnote}
\setminted{xleftmargin=7pt, linenos,resetmargins=true,numberblanklines=false, breaklines,breakautoindent,autogobble,tabsize=2}
\newminted[python3]{python}{}
\newminted[pycon]{pycon}{}
\newminted[cpp]{cpp}{}

% Use to include text files into a LaTeX file, such as source files
%\usepackage{fancyvrb}
% redefine \VerbatimInput
%\RecustomVerbatimCommand{\VerbatimInput}{VerbatimInput}%
%{fontsize=\footnotesize,
 %
 %frame=lines,  % top and bottom rule only
 %framesep=2em, % separation between frame and text
 %rulecolor=\color{Gray},
%
 %label=\fbox{\color{Black}Passwords},
 %labelposition=topline,
 %
 %commandchars=\|\(\), % escape character and argument delimiters for
                      % commands within the verbatim
% commentchar=*        % comment character
%}
% Then we use
%\VerbatimInput{yourFileInSameDirectory.txt}
\usepackage{enumitem}
\setlist[itemize,1]{label=$\bullet$}
\setlist[itemize,2]{label=$\diamond$}
\setlist[itemize,3]{label=$\triangleright$}
\setlist[itemize,4]{label=$\square$}
\setlist[itemize,5]{label=$\circ$}
\setlist[itemize,6]{label=$\blacktriangleright$}
\setlist[itemize,7]{label=\tiny$\blacksquare$}
\setlist[itemize,8]{label=$\ast$}
\setlist[itemize,9]{label=$\star$}

\renewlist{itemize}{itemize}{9}

% KOMA script won't include the nomenclature within the table of contents
\def\nompreamble{\addcontentsline{toc}{section}{\nomname}\markboth{\nomname}{\nomname}}
%\DeclareUnicodeCharacter{21AA}{\hookarrow}

\title{CS3528 Homework 5}
\author{Robert Susmilch}
\usepackage{scrlayer-scrpage}
\pagestyle{scrheadings}
%\makeatletter
\let\papertitle\@title
\let\paperauthor\@author
\let\paperdate\@date
%\makeatother
\lehead[\papertitle]{\papertitle}
\rehead[\paperauthor]{\paperauthor}
\lohead[\paperauthor]{\paperauthor}
\rohead[\papertitle]{\papertitle}

% Highlight nomenclature terms in some way.
\newcommand{\term}[1]{\textcolor{blue}{#1}}
%\newcommand{\term}[1]{\texttt{#1}}
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\tn}[1]{\term{\noun{#1}}}

\renewcommand{\implies}{\rightarrow}
\renewcommand{\iff}{\leftrightarrow}
%\newcommand{\nequiv}{\not \equiv}
\usepackage{listings}

\lstdefinelanguage{ijvm}
{morekeywords={BIPUSH, DUP, GOTO, IADD, IAND, IFEQ, IFLT, IF\_ICMPEQ, IINC, ILOAD, INVOKEVIRTUAL, IOR, IRETURN, ISTORE, ISUB, LDC\_W, NOP, POP, SWAP, WIDE, RD, WR, FETCH, if},
sensitive = false,
morecomment=[l]{//},
emph={A, B, N, Z, MDR, PC, MBR, MBRU, SP, LV, CPP, TOS, OPC, MPC},
emph={[2]H, MAR},
emphstyle={\color{blue}},
emphstyle={[2]\color{muave}}
}

\lstset{%
numbers=left,
numberstyle={\footnotesize},
basicstyle={\ttfamily},
breaklines=true,
commentstyle={\color{teal}\textit},
keywordstyle={\color{green}},
rulecolor={\color{black}},
backgroundcolor={\color{gray}},
stringstyle={\color{muave}},
frame=single,
upquote=true}

\newcommand{\ijvm}[1]{\lstinline[language=ijvm]{#1}}
\usepackage[maxfloats=25]{morefloats}

\setminted{breaklines,breakautoindent,autogobble,tabsize=2}
\newminted[asm]{nasm}{}
\newminted[html]{html}{}
\newminted[java]{java}{}
\newminted[bash]{bash}{}

\newcommand{\iasm}[1]{\mintinline{nasm}{#1}}

\renewcommand*\titlepagestyle{empty}

\newcommand{\blankpage}{%
\newpage%
\thispagestyle{empty}%
\mbox{}%
\newpage%
}

\usepackage{mdframed}
%\usepackage{tkz-graph}
%\GraphInit[vstyle = Normal]
%\tikzset{
  %LabelStyle/.style = { rectangle, rounded corners, draw,
  %                      minimum width = 2em, fill = yellow!50,
  %                      text = red, font = \bfseries },
%  VertexStyle/.append style = { inner sep=5pt,
%                                font = \bfseries}}
%  EdgeStyle/.append style = {->, bend left} }

\usepackage{blkarray}
\usepackage{tikz}
\usepackage{tikz-qtree}
\end_preamble
\options headsepline,DIV=15,BCOR=0in,index=totoc,toc=listofnumbered,toc=graduated,unicode=true, twocolumn=false
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8x
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "CS3528 Homework 5"
\pdf_author "Robert Susmilch"
\pdf_subject "Computer Science"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref page
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Problem Overview
\end_layout

\begin_layout Itemize
Sort and order packages onto truck
\end_layout

\begin_layout Itemize
Determine packages that can be delivered on time.
\end_layout

\begin_deeper
\begin_layout Itemize
Driver has 8 hours to return to warehouse.
\end_layout

\end_deeper
\begin_layout Itemize
Determine and deliver driving directions from currently location to driver
 for next address.
\end_layout

\begin_layout Section
Classes
\end_layout

\begin_layout Subsection
Package
\end_layout

\begin_layout Itemize
UUID
\end_layout

\begin_deeper
\begin_layout Itemize
Each package exists as 
\series bold
one package object
\series default
 in the system
\end_layout

\end_deeper
\begin_layout Itemize
Package pointers to two client objects
\end_layout

\begin_deeper
\begin_layout Itemize
Sender Client
\end_layout

\begin_layout Itemize
Receiver Client
\end_layout

\end_deeper
\begin_layout Itemize
Structure to hold packages currently
\end_layout

\begin_deeper
\begin_layout Itemize
In the warehouse
\end_layout

\begin_layout Itemize
On the truck
\end_layout

\end_deeper
\begin_layout Itemize
Packages have a priority
\end_layout

\begin_deeper
\begin_layout Itemize
Overnight
\end_layout

\begin_layout Itemize
Two day
\end_layout

\begin_layout Itemize
Regular
\end_layout

\end_deeper
\begin_layout Subsection
Clients
\end_layout

\begin_layout Itemize
Separate client information from packages
\end_layout

\begin_layout Itemize
Client object should represent one physical client.
\end_layout

\begin_layout Itemize
Each client (sender/receiver) points to one or multiple packages.
\end_layout

\begin_deeper
\begin_layout Itemize
Separate sent package pointers
\end_layout

\begin_layout Itemize
Separate received package pointers
\end_layout

\end_deeper
\begin_layout Subsection
Trucks
\end_layout

\begin_layout Itemize
Trucks have a weight limit.
\end_layout

\begin_layout Itemize
Trucks, and drivers, have 8 hours to return to the warehouse after start.
\end_layout

\begin_layout Subsection
City
\end_layout

\begin_layout Itemize
City is divided into quadrants.
\end_layout

\begin_deeper
\begin_layout Itemize
Streets North of center (Main Street) are numbered sequentially (1st Street
 North, 2nd Street North, etc.)
\end_layout

\begin_layout Itemize
Streets South of center (Main Street) are numbered as (1st Street South,
 2nd Street South, etc.)
\end_layout

\begin_layout Itemize
Avenues West of center (Central Avenue) are numbered as (1st Avenue West,
 etc)
\end_layout

\begin_layout Itemize
Similar for East of Central Avenue.
\end_layout

\end_deeper
\begin_layout Itemize
Assume truck can drive one block per minute.
\end_layout

\begin_deeper
\begin_layout Itemize
Stops take 5 minutes.
\end_layout

\end_deeper
\begin_layout Section
Program Overview
\end_layout

\begin_layout Itemize
Make file
\end_layout

\begin_layout Subsection
Structures
\end_layout

\begin_layout Subsubsection
Map
\end_layout

\begin_layout Itemize
Collection of nodes with edge weights as grid driving distance (truck and
 only go north/south or east/west.)
\end_layout

\begin_layout Subsubsection
Packages
\end_layout

\begin_layout Itemize
Age variable for two-day or regular packages.
\end_layout

\begin_deeper
\begin_layout Itemize
Birthdate or mail dates.
\end_layout

\begin_layout Itemize
Prevents late packages.
\end_layout

\end_deeper
\begin_layout Subsection
Style
\end_layout

\begin_layout Itemize
Classes (method) and object names are initial capitalized (MyClass)
\end_layout

\begin_layout Itemize
Class member variables are initial lowercase (myVar)
\end_layout

\begin_layout Itemize
All variables, functions, methods, etc are camelCase.
\end_layout

\begin_layout Itemize
Following Qt Doxygen style (see below.) 
\begin_inset CommandInset href
LatexCommand href
name "Doxygen documentation"
target "http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html"

\end_inset


\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language={[GNU]C++},breaklines=true,showstringspaces=false"
inline false
status open

\begin_layout Plain Layout
//!  A test class.
 
\end_layout

\begin_layout Plain Layout
/*!
\end_layout

\begin_layout Plain Layout
  A more elaborate class description.
\end_layout

\begin_layout Plain Layout
*/
\end_layout

\begin_layout Plain Layout
class QTstyle_Test
\end_layout

\begin_layout Plain Layout
{
\end_layout

\begin_layout Plain Layout
  public:
\end_layout

\begin_layout Plain Layout
    //! An enum.
\end_layout

\begin_layout Plain Layout
    /*! More detailed enum description.
 */
\end_layout

\begin_layout Plain Layout
    enum TEnum { 
\end_layout

\begin_layout Plain Layout
                 TVal1, /*!< Enum value TVal1.
 */  
\end_layout

\begin_layout Plain Layout
                 TVal2, /*!< Enum value TVal2.
 */  
\end_layout

\begin_layout Plain Layout
                 TVal3  /*!< Enum value TVal3.
 */  
\end_layout

\begin_layout Plain Layout
               } 
\end_layout

\begin_layout Plain Layout
         //! Enum pointer.
\end_layout

\begin_layout Plain Layout
         /*! Details.
 */
\end_layout

\begin_layout Plain Layout
         *enumPtr, 
\end_layout

\begin_layout Plain Layout
         //! Enum variable.
\end_layout

\begin_layout Plain Layout
         /*! Details.
 */
\end_layout

\begin_layout Plain Layout
         enumVar;  
\end_layout

\begin_layout Plain Layout
    
\end_layout

\begin_layout Plain Layout
    //! A constructor.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      A more elaborate description of the constructor.
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
    QTstyle_Test();
\end_layout

\begin_layout Plain Layout
    //! A destructor.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      A more elaborate description of the destructor.
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
   ~QTstyle_Test();
\end_layout

\begin_layout Plain Layout
    
\end_layout

\begin_layout Plain Layout
    //! A normal member taking two arguments and returning an integer value.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      
\backslash
param a an integer argument.
\end_layout

\begin_layout Plain Layout
      
\backslash
param s a constant character pointer.
\end_layout

\begin_layout Plain Layout
      
\backslash
return The test results
\end_layout

\begin_layout Plain Layout
      
\backslash
sa QTstyle_Test(), ~QTstyle_Test(), testMeToo() and publicVar()
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
    int testMe(int a,const char *s);
\end_layout

\begin_layout Plain Layout
       
\end_layout

\begin_layout Plain Layout
    //! A pure virtual member.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      
\backslash
sa testMe()
\end_layout

\begin_layout Plain Layout
      
\backslash
param c1 the first argument.
\end_layout

\begin_layout Plain Layout
      
\backslash
param c2 the second argument.
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
    virtual void testMeToo(char c1,char c2) = 0;
\end_layout

\begin_layout Plain Layout
   
\end_layout

\begin_layout Plain Layout
    //! A public variable.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      Details.
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
    int publicVar;
\end_layout

\begin_layout Plain Layout
       
\end_layout

\begin_layout Plain Layout
    //! A function variable.
\end_layout

\begin_layout Plain Layout
    /*!
\end_layout

\begin_layout Plain Layout
      Details.
\end_layout

\begin_layout Plain Layout
    */
\end_layout

\begin_layout Plain Layout
    int (*handler)(int a,int b);
\end_layout

\begin_layout Plain Layout
};
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
Classes
\end_layout

\begin_layout Itemize
Client class
\end_layout

\begin_layout Itemize
Package class
\end_layout

\begin_layout Itemize
Truck class
\end_layout

\begin_deeper
\begin_layout Itemize
Weight initialize
\end_layout

\begin_layout Itemize
Trucks are contained in a vector
\end_layout

\begin_deeper
\begin_layout Itemize
Multiple trucks are passed to other class objects
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Map class
\end_layout

\begin_deeper
\begin_layout Itemize
Creates adjacency list of packages.
\end_layout

\end_deeper
\begin_layout Itemize
Routing class (algorithm)
\end_layout

\begin_deeper
\begin_layout Itemize
Truck vector is passed to the algorithm
\end_layout

\begin_layout Itemize
Map graph adjacency list is passed to the algorithm
\end_layout

\begin_layout Itemize
Routing algorithm loads truck based on 
\begin_inset Quotes eld
\end_inset

something
\begin_inset Quotes erd
\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Input Files
\end_layout

\begin_layout Standard
Comma separated list of packages to deliver.
\end_layout

\begin_layout Itemize
Each line includes the sender and receiver.
\end_layout

\end_body
\end_document
